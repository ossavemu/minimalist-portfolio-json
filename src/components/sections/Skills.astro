---
import type { Language } from '@/constants';
import { SECTION_TITLES } from '@/constants';
import type { CV } from '@/cv';
import CSS from '@/icons/css.astro';
import Git from '@/icons/git.astro';
import GitHub from '@/icons/GitHub.astro';
import HTML from '@/icons/html.astro';
import JavaScript from '@/icons/javascript.astro';
import Kotlin from '@/icons/kotlin.astro';
import Laravel from '@/icons/laravel.astro';
import Next from '@/icons/next.astro';
import Node from '@/icons/node.astro';
import PHP from '@/icons/php.astro';
import React from '@/icons/react.astro';
import MySQL from '@/icons/sql.astro';
import SQLite from '@/icons/sqlite.astro';
import Swift from '@/icons/swift.astro';
import SwiftUI from '@/icons/swiftui.astro';
import Tailwind from '@/icons/tailwind.astro';
import TypeScript from '@/icons/type.astro';
import Section from '../Section.astro';

interface Props {
  data: CV;
}

const { data } = Astro.props;
const skills = data.skills;

// Get current language from Astro's i18n
const currentLang = (Astro.currentLocale || 'en') as Language;

const SKILLS_ICONS: Record<string, any> = {
  HTML,
  CSS,
  JavaScript,
  TypeScript,
  React,
  Node,
  MySQL,
  Git,
  GitHub,
  Next,
  Tailwind,
  Swift,
  SwiftUI,
  Kotlin,
  SQLite,
  PHP,
  Laravel,
};

// Map skill names to icon names
const iconMap: Record<string, string> = {
  Python: 'Python', // Need to create this icon
  'Node.js': 'Node',
  NestJS: 'Node', // Use Node icon for NestJS
  'Express.js': 'Node', // Use Node icon for Express
  'Prisma ORM': 'Node', // Use Node icon for Prisma
  React: 'React',
  'Vue.js': 'JavaScript', // Use JavaScript icon for Vue
  JavaScript: 'JavaScript',
  HTML5: 'HTML',
  CSS3: 'CSS',
  PostgreSQL: 'MySQL', // Use MySQL icon for PostgreSQL
  MySQL: 'MySQL',
  MongoDB: 'MySQL', // Use MySQL icon for MongoDB
  Redis: 'MySQL', // Use MySQL icon for Redis
  'Next.js': 'Next',
  TypeScript: 'TypeScript',
  PHP: 'PHP',
  Laravel: 'Laravel',
  Swift: 'Swift',
  SwiftUI: 'SwiftUI',
  Kotlin: 'Kotlin',
  SQLite: 'SQLite',
  Tailwind: 'Tailwind',
  Git: 'Git',
  GitHub: 'GitHub',
};
---

<Section title={SECTION_TITLES.SKILLS[currentLang]}>
  <ul>
    {
      skills
        .flatMap(({ keywords }) => keywords)
        .map((name) => {
          const iconName = iconMap[name] || null;
          const Icon = iconName ? SKILLS_ICONS[iconName] : null;

          return (
            <li>
              {Icon && <Icon />} <span>{name}</span>
            </li>
          );
        })
    }
  </ul>
</Section>

<style>
  ul {
    display: inline-flex;
    gap: 8px;
    flex-wrap: wrap;
  }

  li {
    align-items: center;
    background: #eee;
    border-radius: 6px;
    color: black;
    display: flex;
    font-size: 0.8rem;
    font-weight: 500;
    gap: 4px;
    padding: 0.2rem 0.6rem;
  }
</style>
